name: Günlük Commit Özeti

on:
  schedule:
    - cron: "0 */2 * * *" # 2 saatte bir
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate-summary:
    runs-on: ubuntu-latest
    steps:
      - name: Repo'yu klonla
        uses: actions/checkout@v3

      - name: Commit verilerini topla
        run: |
          echo "Veriler toplanıyor..."
          mkdir temp
          cd temp

          gh repo list Software-Guardians --limit 100 --json name --jq '.[].name' > ../repo_list.txt

          cd ..
          total_commits=0
          unique_days=()
          declare -A repo_commits
          last_commit=""

          while IFS= read -r repo; do
            echo "İşleniyor: $repo"
            gh repo clone Software-Guardians/$repo -- --depth=100 > /dev/null 2>&1 || continue
            cd "$repo" || continue

            commit_count=$(git rev-list --all --count)
            repo_commits["$repo"]=$commit_count
            total_commits=$((total_commits + commit_count))

            dates=$(git log --pretty=format:'%ad' --date=short)
            while IFS= read -r d; do
              unique_days+=("$d")
              last_commit_date=$d
            done <<< "$dates"

            cd ..
            rm -rf "$repo"
          done < repo_list.txt

          # Tekil günleri say
          mapfile -t uniq_days_sorted < <(printf "%s\n" "${unique_days[@]}" | sort -u)
          active_days=${#uniq_days_sorted[@]}
          last_commit="${last_commit_date:-N/A}"
          avg_per_day=$(( total_commits / (active_days > 0 ? active_days : 1) ))

          echo "{" > commit_summary.json
          echo "  \"timestamp\": \"$(date -u)\"," >> commit_summary.json
          echo "  \"total_commits\": $total_commits," >> commit_summary.json
          echo "  \"active_days\": $active_days," >> commit_summary.json
          echo "  \"average_per_day\": $avg_per_day," >> commit_summary.json
          echo "  \"last_commit\": \"$last_commit\"," >> commit_summary.json
          echo "  \"repos\": {" >> commit_summary.json

          i=0
          for r in "${!repo_commits[@]}"; do
            comma=","
            [[ $((++i)) == ${#repo_commits[@]} ]] && comma=""
            echo "    \"$r\": ${repo_commits[$r]}$comma" >> commit_summary.json
          done

          echo "  }" >> commit_summary.json
          echo "}" >> commit_summary.json

      - name: Commit & Push
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add commit_summary.json
          git commit -m "Güncellenmiş commit özeti" || exit 0
          git push
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
